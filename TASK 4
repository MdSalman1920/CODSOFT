! pip install -q kaggle

from google.colab import files

files.upload()

 ! mkdir ~/.kaggle

! cp kaggle.json ~/.kaggle/

! chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d ashydv/advertising-dataset

import zipfile
zip_ref = zipfile.ZipFile('/content/advertising-dataset.zip')
zip_ref.extractall('/content')
zip_ref.close()

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import MinMaxScaler
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
import seaborn as sns

sales_data = pd.read_csv('/content/advertising.csv')

sales_data.head()

sales_data.shape

sales_data.info()

sales_data.describe()

sales_data.isnull().sum()

sns.heatmap(sales_data.corr(), cmap="YlGnBu", annot = True)
plt.show()

sales_data.columns

X = sales_data[['TV', 'Radio', 'Newspaper']]
y = sales_data['Sales']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared Score:", r2)

sns.set_style("whitegrid")

plt.figure(figsize=(10, 6))
sns.scatterplot(x=y_test, y=y_pred, alpha=0.6, edgecolor=None, color='red')
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'k--', lw=2)

plt.xlabel('Actual Sales', fontsize=14)
plt.ylabel('Predicted Sales', fontsize=14)
plt.title('Actual vs. Predicted Sales', fontsize=16)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)

plt.show()

